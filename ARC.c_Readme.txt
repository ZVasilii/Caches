void replace(int *p, long long int page_name, struct list_t* T1, struct list_t* T2, struct list_t* B1, struct list_t* B2, struct page_t* mem, struct cache_t* cache_mem)
p - параметр кеша
page_name - название страницы
T1, B1, B2, T2 - части кеша
mem - указать на память
cache_mem - указатель на память кеша
Функция переноса из T в B кеш, для подробного изучения см. алгоритм

struct cell* insert_in_head(struct list_t* part, long long int page_name, struct page_t* cache_ptr)
part - указать на часть кеша
page_name - название(индекс) страницы
cache_ptr - указатель на страницу в памяти кеша
Вставляет в part новую голову списка с помощью insert_to_head с заданными значениями page_name и cache_ptr

struct cache_t* from_mem_to_cache_mem(long long int page_name, struct page_t* mem, struct cache_t* cache_mem)
page_name - название страницы
mem - указатель на память
cache_mem - указатель на память кеша
Копирует страницу из памяти в память кеша по заданному названию

struct cell* fast_get_page(int* p, long long int page_name, struct list_t* T1, struct list_t* T2, struct list_t* B1, struct list_t* B2, struct page_t* mem, struct cache_t* cache_mem)
Функция кеширования
p - вспомогательный параметр кеширования
page_name - название или индекс страницы
T1, T2, B1, B2 - инициализированные части кеша
mem - указатель на память
cache_mem - указатель на память кеша
Выдает указатель на элемент кеша с данным названием(индексом)
Описание:
1)Поиск среди закешированных страниц
1.1)В Т1 и Т2 используется уже закешированная память
1.2)В B1 и B2 память сначала кешируется из обычной памяти обычным поиском
2)Если элемент не найден, то запускается обычный поиск по памяти 
