Это инструкция по использованию двусвязного списка.

Внутренние файлы списка: dl_list.c

Заголовочный файл: dl_list.h



Список состоит из ячеек: 
Объявление ячейки: struct cell <name>
Внутреннее строение (работа напрямую не предусмотрена):
struct cell {
    struct cell* prev;
    struct cell* next;
    long long int data;
    void* pointer;
};



Доступные функции:

Создание одной ячейки:
struct cell* make_cell(long long int name)
Принимает "имя" ячейки, возвращает указатель на нее. Не забудьте почистить память после использования.
struct cell* make_cell_p(long long int name, void* pointer)
Создает ячейку с заданным именем и указателем.

Уничтожение ячейки: 
void destroy_cell(struct cell* c) 
Уничтожает одну ячейку по введенному указателю, очищая память.
Затягивает "дыры", которые могли остаться на ее месте.

Уничтожение списка: 
void destroy_list(struct cell* c)
Уничтожает указанную ячейку и все, которые с ней связаны. 
Предусмотрена работа на зацикленных списках.

Перемещение ячейки: 
struct cell* place_cell_before(struct cell* c, struct cell* place)
struct cell* place_cell_after(struct cell* c, struct cell* place)
Перемещает ячеку *с на позицию до или после *place. Затягивает "дыры", которые могли остаться на старом месте.
Вставление между двумя подряд идущими ячейками предусмотрено.

Получение имени ячейки: 
long long int cell_name(struct cell* c)
Возвращает имя ячейки по указателю.

Переход к предыдущей/следующей ячейке:
struct cell* next_cell(struct cell* c)
struct cell* prev_cell(struct cell* c)
Получает указатель на текущую ячейку, возвращает указатель на следующую/предыдущую.

Работа с указателем ячейки:
struct cell* set_pointer(struct cell* c, void* pointer)
Записывает в ячейку значение введенного указателя, старый при наличии безвозвратно затирается.
Возращает указатель на ячейку.
void* cell_pointer(struct cell* c)
Возвращает записанный в ячейку указатель. При отстутствии возращает NULL.

Поиск ячейки:
struct cell* find_cell(struct cell* c, long long int name)
Ищет ячейку с заданным именем, возвращает указатель на нее. с - указатель на любую ячейку списка.
При наличии нескольких ячеек с одинаковым именем возвращает любую.

Нахождение длины списка:
unsigned long long list_len(struct cell* c)
Возвращает длину списка по любой его ячейке. Предусмотрена работа с зацикленными списками.
